// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sampling.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jaeger.ApiV2 {

  /// <summary>Holder for reflection information generated from sampling.proto</summary>
  public static partial class SamplingReflection {

    #region Descriptor
    /// <summary>File descriptor for sampling.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SamplingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zYW1wbGluZy5wcm90bxINamFlZ2VyLmFwaV92MhoUZ29nb3Byb3RvL2dv",
            "Z28ucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aLHByb3Rv",
            "Yy1nZW4tc3dhZ2dlci9vcHRpb25zL2Fubm90YXRpb25zLnByb3RvIjUKHVBy",
            "b2JhYmlsaXN0aWNTYW1wbGluZ1N0cmF0ZWd5EhQKDHNhbXBsaW5nUmF0ZRgB",
            "IAEoASI6ChxSYXRlTGltaXRpbmdTYW1wbGluZ1N0cmF0ZWd5EhoKEm1heFRy",
            "YWNlc1BlclNlY29uZBgBIAEoBSJ7ChlPcGVyYXRpb25TYW1wbGluZ1N0cmF0",
            "ZWd5EhEKCW9wZXJhdGlvbhgBIAEoCRJLChVwcm9iYWJpbGlzdGljU2FtcGxp",
            "bmcYAiABKAsyLC5qYWVnZXIuYXBpX3YyLlByb2JhYmlsaXN0aWNTYW1wbGlu",
            "Z1N0cmF0ZWd5IuIBCh5QZXJPcGVyYXRpb25TYW1wbGluZ1N0cmF0ZWdpZXMS",
            "IgoaZGVmYXVsdFNhbXBsaW5nUHJvYmFiaWxpdHkYASABKAESKAogZGVmYXVs",
            "dExvd2VyQm91bmRUcmFjZXNQZXJTZWNvbmQYAiABKAESSAoWcGVyT3BlcmF0",
            "aW9uU3RyYXRlZ2llcxgDIAMoCzIoLmphZWdlci5hcGlfdjIuT3BlcmF0aW9u",
            "U2FtcGxpbmdTdHJhdGVneRIoCiBkZWZhdWx0VXBwZXJCb3VuZFRyYWNlc1Bl",
            "clNlY29uZBgEIAEoASK3AgoYU2FtcGxpbmdTdHJhdGVneVJlc3BvbnNlEjkK",
            "DHN0cmF0ZWd5VHlwZRgBIAEoDjIjLmphZWdlci5hcGlfdjIuU2FtcGxpbmdT",
            "dHJhdGVneVR5cGUSSwoVcHJvYmFiaWxpc3RpY1NhbXBsaW5nGAIgASgLMiwu",
            "amFlZ2VyLmFwaV92Mi5Qcm9iYWJpbGlzdGljU2FtcGxpbmdTdHJhdGVneRJJ",
            "ChRyYXRlTGltaXRpbmdTYW1wbGluZxgDIAEoCzIrLmphZWdlci5hcGlfdjIu",
            "UmF0ZUxpbWl0aW5nU2FtcGxpbmdTdHJhdGVneRJIChFvcGVyYXRpb25TYW1w",
            "bGluZxgEIAEoCzItLmphZWdlci5hcGlfdjIuUGVyT3BlcmF0aW9uU2FtcGxp",
            "bmdTdHJhdGVnaWVzIjEKGlNhbXBsaW5nU3RyYXRlZ3lQYXJhbWV0ZXJzEhMK",
            "C3NlcnZpY2VOYW1lGAEgASgJKjwKFFNhbXBsaW5nU3RyYXRlZ3lUeXBlEhEK",
            "DVBST0JBQklMSVNUSUMQABIRCg1SQVRFX0xJTUlUSU5HEAEyogEKD1NhbXBs",
            "aW5nTWFuYWdlchKOAQoTR2V0U2FtcGxpbmdTdHJhdGVneRIpLmphZWdlci5h",
            "cGlfdjIuU2FtcGxpbmdTdHJhdGVneVBhcmFtZXRlcnMaJy5qYWVnZXIuYXBp",
            "X3YyLlNhbXBsaW5nU3RyYXRlZ3lSZXNwb25zZSIjgtPkkwIdIhgvYXBpL3Yy",
            "L3NhbXBsaW5nU3RyYXRlZ3k6ASpCdgoXaW8uamFlZ2VydHJhY2luZy5hcGlf",
            "djJaBmFwaV92MsjiHgHQ4h4B4OIeAcDjHgGSQUISBTIDMS4wKgIBAnI1CgpK",
            "YWVnZXIgQVBJEidodHRwczovL2dpdGh1Yi5jb20vamFlZ2VydHJhY2luZy9q",
            "YWVnZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Jaeger.ApiV2.SamplingStrategyType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.ProbabilisticSamplingStrategy), global::Jaeger.ApiV2.ProbabilisticSamplingStrategy.Parser, new[]{ "SamplingRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.RateLimitingSamplingStrategy), global::Jaeger.ApiV2.RateLimitingSamplingStrategy.Parser, new[]{ "MaxTracesPerSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.OperationSamplingStrategy), global::Jaeger.ApiV2.OperationSamplingStrategy.Parser, new[]{ "Operation", "ProbabilisticSampling" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.PerOperationSamplingStrategies), global::Jaeger.ApiV2.PerOperationSamplingStrategies.Parser, new[]{ "DefaultSamplingProbability", "DefaultLowerBoundTracesPerSecond", "PerOperationStrategies", "DefaultUpperBoundTracesPerSecond" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.SamplingStrategyResponse), global::Jaeger.ApiV2.SamplingStrategyResponse.Parser, new[]{ "StrategyType", "ProbabilisticSampling", "RateLimitingSampling", "OperationSampling" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.SamplingStrategyParameters), global::Jaeger.ApiV2.SamplingStrategyParameters.Parser, new[]{ "ServiceName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum SamplingStrategyType {
    [pbr::OriginalName("PROBABILISTIC")] Probabilistic = 0,
    [pbr::OriginalName("RATE_LIMITING")] RateLimiting = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ProbabilisticSamplingStrategy : pb::IMessage<ProbabilisticSamplingStrategy> {
    private static readonly pb::MessageParser<ProbabilisticSamplingStrategy> _parser = new pb::MessageParser<ProbabilisticSamplingStrategy>(() => new ProbabilisticSamplingStrategy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProbabilisticSamplingStrategy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.SamplingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbabilisticSamplingStrategy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbabilisticSamplingStrategy(ProbabilisticSamplingStrategy other) : this() {
      samplingRate_ = other.samplingRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProbabilisticSamplingStrategy Clone() {
      return new ProbabilisticSamplingStrategy(this);
    }

    /// <summary>Field number for the "samplingRate" field.</summary>
    public const int SamplingRateFieldNumber = 1;
    private double samplingRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SamplingRate {
      get { return samplingRate_; }
      set {
        samplingRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProbabilisticSamplingStrategy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProbabilisticSamplingStrategy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SamplingRate, other.SamplingRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SamplingRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SamplingRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SamplingRate != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(SamplingRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SamplingRate != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProbabilisticSamplingStrategy other) {
      if (other == null) {
        return;
      }
      if (other.SamplingRate != 0D) {
        SamplingRate = other.SamplingRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SamplingRate = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RateLimitingSamplingStrategy : pb::IMessage<RateLimitingSamplingStrategy> {
    private static readonly pb::MessageParser<RateLimitingSamplingStrategy> _parser = new pb::MessageParser<RateLimitingSamplingStrategy>(() => new RateLimitingSamplingStrategy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateLimitingSamplingStrategy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.SamplingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimitingSamplingStrategy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimitingSamplingStrategy(RateLimitingSamplingStrategy other) : this() {
      maxTracesPerSecond_ = other.maxTracesPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimitingSamplingStrategy Clone() {
      return new RateLimitingSamplingStrategy(this);
    }

    /// <summary>Field number for the "maxTracesPerSecond" field.</summary>
    public const int MaxTracesPerSecondFieldNumber = 1;
    private int maxTracesPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxTracesPerSecond {
      get { return maxTracesPerSecond_; }
      set {
        maxTracesPerSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateLimitingSamplingStrategy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateLimitingSamplingStrategy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxTracesPerSecond != other.MaxTracesPerSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxTracesPerSecond != 0) hash ^= MaxTracesPerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxTracesPerSecond != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxTracesPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxTracesPerSecond != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTracesPerSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateLimitingSamplingStrategy other) {
      if (other == null) {
        return;
      }
      if (other.MaxTracesPerSecond != 0) {
        MaxTracesPerSecond = other.MaxTracesPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxTracesPerSecond = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationSamplingStrategy : pb::IMessage<OperationSamplingStrategy> {
    private static readonly pb::MessageParser<OperationSamplingStrategy> _parser = new pb::MessageParser<OperationSamplingStrategy>(() => new OperationSamplingStrategy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationSamplingStrategy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.SamplingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationSamplingStrategy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationSamplingStrategy(OperationSamplingStrategy other) : this() {
      operation_ = other.operation_;
      probabilisticSampling_ = other.probabilisticSampling_ != null ? other.probabilisticSampling_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationSamplingStrategy Clone() {
      return new OperationSamplingStrategy(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private string operation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Operation {
      get { return operation_; }
      set {
        operation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "probabilisticSampling" field.</summary>
    public const int ProbabilisticSamplingFieldNumber = 2;
    private global::Jaeger.ApiV2.ProbabilisticSamplingStrategy probabilisticSampling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jaeger.ApiV2.ProbabilisticSamplingStrategy ProbabilisticSampling {
      get { return probabilisticSampling_; }
      set {
        probabilisticSampling_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationSamplingStrategy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationSamplingStrategy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operation != other.Operation) return false;
      if (!object.Equals(ProbabilisticSampling, other.ProbabilisticSampling)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Operation.Length != 0) hash ^= Operation.GetHashCode();
      if (probabilisticSampling_ != null) hash ^= ProbabilisticSampling.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Operation.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Operation);
      }
      if (probabilisticSampling_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProbabilisticSampling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Operation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Operation);
      }
      if (probabilisticSampling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProbabilisticSampling);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationSamplingStrategy other) {
      if (other == null) {
        return;
      }
      if (other.Operation.Length != 0) {
        Operation = other.Operation;
      }
      if (other.probabilisticSampling_ != null) {
        if (probabilisticSampling_ == null) {
          ProbabilisticSampling = new global::Jaeger.ApiV2.ProbabilisticSamplingStrategy();
        }
        ProbabilisticSampling.MergeFrom(other.ProbabilisticSampling);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Operation = input.ReadString();
            break;
          }
          case 18: {
            if (probabilisticSampling_ == null) {
              ProbabilisticSampling = new global::Jaeger.ApiV2.ProbabilisticSamplingStrategy();
            }
            input.ReadMessage(ProbabilisticSampling);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PerOperationSamplingStrategies : pb::IMessage<PerOperationSamplingStrategies> {
    private static readonly pb::MessageParser<PerOperationSamplingStrategies> _parser = new pb::MessageParser<PerOperationSamplingStrategies>(() => new PerOperationSamplingStrategies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PerOperationSamplingStrategies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.SamplingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerOperationSamplingStrategies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerOperationSamplingStrategies(PerOperationSamplingStrategies other) : this() {
      defaultSamplingProbability_ = other.defaultSamplingProbability_;
      defaultLowerBoundTracesPerSecond_ = other.defaultLowerBoundTracesPerSecond_;
      perOperationStrategies_ = other.perOperationStrategies_.Clone();
      defaultUpperBoundTracesPerSecond_ = other.defaultUpperBoundTracesPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PerOperationSamplingStrategies Clone() {
      return new PerOperationSamplingStrategies(this);
    }

    /// <summary>Field number for the "defaultSamplingProbability" field.</summary>
    public const int DefaultSamplingProbabilityFieldNumber = 1;
    private double defaultSamplingProbability_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DefaultSamplingProbability {
      get { return defaultSamplingProbability_; }
      set {
        defaultSamplingProbability_ = value;
      }
    }

    /// <summary>Field number for the "defaultLowerBoundTracesPerSecond" field.</summary>
    public const int DefaultLowerBoundTracesPerSecondFieldNumber = 2;
    private double defaultLowerBoundTracesPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DefaultLowerBoundTracesPerSecond {
      get { return defaultLowerBoundTracesPerSecond_; }
      set {
        defaultLowerBoundTracesPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "perOperationStrategies" field.</summary>
    public const int PerOperationStrategiesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Jaeger.ApiV2.OperationSamplingStrategy> _repeated_perOperationStrategies_codec
        = pb::FieldCodec.ForMessage(26, global::Jaeger.ApiV2.OperationSamplingStrategy.Parser);
    private readonly pbc::RepeatedField<global::Jaeger.ApiV2.OperationSamplingStrategy> perOperationStrategies_ = new pbc::RepeatedField<global::Jaeger.ApiV2.OperationSamplingStrategy>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jaeger.ApiV2.OperationSamplingStrategy> PerOperationStrategies {
      get { return perOperationStrategies_; }
    }

    /// <summary>Field number for the "defaultUpperBoundTracesPerSecond" field.</summary>
    public const int DefaultUpperBoundTracesPerSecondFieldNumber = 4;
    private double defaultUpperBoundTracesPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DefaultUpperBoundTracesPerSecond {
      get { return defaultUpperBoundTracesPerSecond_; }
      set {
        defaultUpperBoundTracesPerSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PerOperationSamplingStrategies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PerOperationSamplingStrategies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DefaultSamplingProbability, other.DefaultSamplingProbability)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DefaultLowerBoundTracesPerSecond, other.DefaultLowerBoundTracesPerSecond)) return false;
      if(!perOperationStrategies_.Equals(other.perOperationStrategies_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DefaultUpperBoundTracesPerSecond, other.DefaultUpperBoundTracesPerSecond)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultSamplingProbability != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DefaultSamplingProbability);
      if (DefaultLowerBoundTracesPerSecond != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DefaultLowerBoundTracesPerSecond);
      hash ^= perOperationStrategies_.GetHashCode();
      if (DefaultUpperBoundTracesPerSecond != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DefaultUpperBoundTracesPerSecond);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefaultSamplingProbability != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(DefaultSamplingProbability);
      }
      if (DefaultLowerBoundTracesPerSecond != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(DefaultLowerBoundTracesPerSecond);
      }
      perOperationStrategies_.WriteTo(output, _repeated_perOperationStrategies_codec);
      if (DefaultUpperBoundTracesPerSecond != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(DefaultUpperBoundTracesPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultSamplingProbability != 0D) {
        size += 1 + 8;
      }
      if (DefaultLowerBoundTracesPerSecond != 0D) {
        size += 1 + 8;
      }
      size += perOperationStrategies_.CalculateSize(_repeated_perOperationStrategies_codec);
      if (DefaultUpperBoundTracesPerSecond != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PerOperationSamplingStrategies other) {
      if (other == null) {
        return;
      }
      if (other.DefaultSamplingProbability != 0D) {
        DefaultSamplingProbability = other.DefaultSamplingProbability;
      }
      if (other.DefaultLowerBoundTracesPerSecond != 0D) {
        DefaultLowerBoundTracesPerSecond = other.DefaultLowerBoundTracesPerSecond;
      }
      perOperationStrategies_.Add(other.perOperationStrategies_);
      if (other.DefaultUpperBoundTracesPerSecond != 0D) {
        DefaultUpperBoundTracesPerSecond = other.DefaultUpperBoundTracesPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DefaultSamplingProbability = input.ReadDouble();
            break;
          }
          case 17: {
            DefaultLowerBoundTracesPerSecond = input.ReadDouble();
            break;
          }
          case 26: {
            perOperationStrategies_.AddEntriesFrom(input, _repeated_perOperationStrategies_codec);
            break;
          }
          case 33: {
            DefaultUpperBoundTracesPerSecond = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SamplingStrategyResponse : pb::IMessage<SamplingStrategyResponse> {
    private static readonly pb::MessageParser<SamplingStrategyResponse> _parser = new pb::MessageParser<SamplingStrategyResponse>(() => new SamplingStrategyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SamplingStrategyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.SamplingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingStrategyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingStrategyResponse(SamplingStrategyResponse other) : this() {
      strategyType_ = other.strategyType_;
      probabilisticSampling_ = other.probabilisticSampling_ != null ? other.probabilisticSampling_.Clone() : null;
      rateLimitingSampling_ = other.rateLimitingSampling_ != null ? other.rateLimitingSampling_.Clone() : null;
      operationSampling_ = other.operationSampling_ != null ? other.operationSampling_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingStrategyResponse Clone() {
      return new SamplingStrategyResponse(this);
    }

    /// <summary>Field number for the "strategyType" field.</summary>
    public const int StrategyTypeFieldNumber = 1;
    private global::Jaeger.ApiV2.SamplingStrategyType strategyType_ = global::Jaeger.ApiV2.SamplingStrategyType.Probabilistic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jaeger.ApiV2.SamplingStrategyType StrategyType {
      get { return strategyType_; }
      set {
        strategyType_ = value;
      }
    }

    /// <summary>Field number for the "probabilisticSampling" field.</summary>
    public const int ProbabilisticSamplingFieldNumber = 2;
    private global::Jaeger.ApiV2.ProbabilisticSamplingStrategy probabilisticSampling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jaeger.ApiV2.ProbabilisticSamplingStrategy ProbabilisticSampling {
      get { return probabilisticSampling_; }
      set {
        probabilisticSampling_ = value;
      }
    }

    /// <summary>Field number for the "rateLimitingSampling" field.</summary>
    public const int RateLimitingSamplingFieldNumber = 3;
    private global::Jaeger.ApiV2.RateLimitingSamplingStrategy rateLimitingSampling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jaeger.ApiV2.RateLimitingSamplingStrategy RateLimitingSampling {
      get { return rateLimitingSampling_; }
      set {
        rateLimitingSampling_ = value;
      }
    }

    /// <summary>Field number for the "operationSampling" field.</summary>
    public const int OperationSamplingFieldNumber = 4;
    private global::Jaeger.ApiV2.PerOperationSamplingStrategies operationSampling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jaeger.ApiV2.PerOperationSamplingStrategies OperationSampling {
      get { return operationSampling_; }
      set {
        operationSampling_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SamplingStrategyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SamplingStrategyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StrategyType != other.StrategyType) return false;
      if (!object.Equals(ProbabilisticSampling, other.ProbabilisticSampling)) return false;
      if (!object.Equals(RateLimitingSampling, other.RateLimitingSampling)) return false;
      if (!object.Equals(OperationSampling, other.OperationSampling)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StrategyType != global::Jaeger.ApiV2.SamplingStrategyType.Probabilistic) hash ^= StrategyType.GetHashCode();
      if (probabilisticSampling_ != null) hash ^= ProbabilisticSampling.GetHashCode();
      if (rateLimitingSampling_ != null) hash ^= RateLimitingSampling.GetHashCode();
      if (operationSampling_ != null) hash ^= OperationSampling.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StrategyType != global::Jaeger.ApiV2.SamplingStrategyType.Probabilistic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) StrategyType);
      }
      if (probabilisticSampling_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProbabilisticSampling);
      }
      if (rateLimitingSampling_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RateLimitingSampling);
      }
      if (operationSampling_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OperationSampling);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StrategyType != global::Jaeger.ApiV2.SamplingStrategyType.Probabilistic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StrategyType);
      }
      if (probabilisticSampling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProbabilisticSampling);
      }
      if (rateLimitingSampling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateLimitingSampling);
      }
      if (operationSampling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationSampling);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SamplingStrategyResponse other) {
      if (other == null) {
        return;
      }
      if (other.StrategyType != global::Jaeger.ApiV2.SamplingStrategyType.Probabilistic) {
        StrategyType = other.StrategyType;
      }
      if (other.probabilisticSampling_ != null) {
        if (probabilisticSampling_ == null) {
          ProbabilisticSampling = new global::Jaeger.ApiV2.ProbabilisticSamplingStrategy();
        }
        ProbabilisticSampling.MergeFrom(other.ProbabilisticSampling);
      }
      if (other.rateLimitingSampling_ != null) {
        if (rateLimitingSampling_ == null) {
          RateLimitingSampling = new global::Jaeger.ApiV2.RateLimitingSamplingStrategy();
        }
        RateLimitingSampling.MergeFrom(other.RateLimitingSampling);
      }
      if (other.operationSampling_ != null) {
        if (operationSampling_ == null) {
          OperationSampling = new global::Jaeger.ApiV2.PerOperationSamplingStrategies();
        }
        OperationSampling.MergeFrom(other.OperationSampling);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StrategyType = (global::Jaeger.ApiV2.SamplingStrategyType) input.ReadEnum();
            break;
          }
          case 18: {
            if (probabilisticSampling_ == null) {
              ProbabilisticSampling = new global::Jaeger.ApiV2.ProbabilisticSamplingStrategy();
            }
            input.ReadMessage(ProbabilisticSampling);
            break;
          }
          case 26: {
            if (rateLimitingSampling_ == null) {
              RateLimitingSampling = new global::Jaeger.ApiV2.RateLimitingSamplingStrategy();
            }
            input.ReadMessage(RateLimitingSampling);
            break;
          }
          case 34: {
            if (operationSampling_ == null) {
              OperationSampling = new global::Jaeger.ApiV2.PerOperationSamplingStrategies();
            }
            input.ReadMessage(OperationSampling);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SamplingStrategyParameters : pb::IMessage<SamplingStrategyParameters> {
    private static readonly pb::MessageParser<SamplingStrategyParameters> _parser = new pb::MessageParser<SamplingStrategyParameters>(() => new SamplingStrategyParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SamplingStrategyParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.SamplingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingStrategyParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingStrategyParameters(SamplingStrategyParameters other) : this() {
      serviceName_ = other.serviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingStrategyParameters Clone() {
      return new SamplingStrategyParameters(this);
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SamplingStrategyParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SamplingStrategyParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SamplingStrategyParameters other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
