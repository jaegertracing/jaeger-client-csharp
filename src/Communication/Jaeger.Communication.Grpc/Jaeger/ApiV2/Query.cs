// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: query.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Jaeger.ApiV2 {

  /// <summary>Holder for reflection information generated from query.proto</summary>
  public static partial class QueryReflection {

    #region Descriptor
    /// <summary>File descriptor for query.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtxdWVyeS5wcm90bxINamFlZ2VyLmFwaV92MhoLbW9kZWwucHJvdG8aFGdv",
            "Z29wcm90by9nb2dvLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnBy",
            "b3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGh5nb29nbGUv",
            "cHJvdG9idWYvZHVyYXRpb24ucHJvdG8aLHByb3RvYy1nZW4tc3dhZ2dlci9v",
            "cHRpb25zL2Fubm90YXRpb25zLnByb3RvImUKD0dldFRyYWNlUmVxdWVzdBJS",
            "Cgh0cmFjZV9pZBgBIAEoDEJAyN4fANreHy1naXRodWIuY29tL2phZWdlcnRy",
            "YWNpbmcvamFlZ2VyL21vZGVsLlRyYWNlSUTi3h8HVHJhY2VJRCI+ChJTcGFu",
            "c1Jlc3BvbnNlQ2h1bmsSKAoFc3BhbnMYASADKAsyEy5qYWVnZXIuYXBpX3Yy",
            "LlNwYW5CBMjeHwAiaQoTQXJjaGl2ZVRyYWNlUmVxdWVzdBJSCgh0cmFjZV9p",
            "ZBgBIAEoDEJAyN4fANreHy1naXRodWIuY29tL2phZWdlcnRyYWNpbmcvamFl",
            "Z2VyL21vZGVsLlRyYWNlSUTi3h8HVHJhY2VJRCIWChRBcmNoaXZlVHJhY2VS",
            "ZXNwb25zZSK2AwoUVHJhY2VRdWVyeVBhcmFtZXRlcnMSFAoMc2VydmljZV9u",
            "YW1lGAEgASgJEhYKDm9wZXJhdGlvbl9uYW1lGAIgASgJEjsKBHRhZ3MYAyAD",
            "KAsyLS5qYWVnZXIuYXBpX3YyLlRyYWNlUXVlcnlQYXJhbWV0ZXJzLlRhZ3NF",
            "bnRyeRI8Cg5zdGFydF90aW1lX21pbhgEIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXBCCJDfHwHI3h8AEjwKDnN0YXJ0X3RpbWVfbWF4GAUgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIIkN8fAcjeHwASOQoMZHVy",
            "YXRpb25fbWluGAYgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgiY",
            "3x8ByN4fABI5CgxkdXJhdGlvbl9tYXgYByABKAsyGS5nb29nbGUucHJvdG9i",
            "dWYuRHVyYXRpb25CCJjfHwHI3h8AEhQKDHNlYXJjaF9kZXB0aBgIIAEoBRor",
            "CglUYWdzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJH",
            "ChFGaW5kVHJhY2VzUmVxdWVzdBIyCgVxdWVyeRgBIAEoCzIjLmphZWdlci5h",
            "cGlfdjIuVHJhY2VRdWVyeVBhcmFtZXRlcnMiFAoSR2V0U2VydmljZXNSZXF1",
            "ZXN0IicKE0dldFNlcnZpY2VzUmVzcG9uc2USEAoIc2VydmljZXMYASADKAki",
            "OgoUR2V0T3BlcmF0aW9uc1JlcXVlc3QSDwoHc2VydmljZRgBIAEoCRIRCglz",
            "cGFuX2tpbmQYAiABKAkiLAoJT3BlcmF0aW9uEgwKBG5hbWUYASABKAkSEQoJ",
            "c3Bhbl9raW5kGAIgASgJIl0KFUdldE9wZXJhdGlvbnNSZXNwb25zZRIWCg5v",
            "cGVyYXRpb25OYW1lcxgBIAMoCRIsCgpvcGVyYXRpb25zGAIgAygLMhguamFl",
            "Z2VyLmFwaV92Mi5PcGVyYXRpb24iigEKFkdldERlcGVuZGVuY2llc1JlcXVl",
            "c3QSOAoKc3RhcnRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXBCCJDfHwHI3h8AEjYKCGVuZF90aW1lGAIgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcEIIkN8fAcjeHwAiVAoXR2V0RGVwZW5kZW5jaWVz",
            "UmVzcG9uc2USOQoMZGVwZW5kZW5jaWVzGAEgAygLMh0uamFlZ2VyLmFwaV92",
            "Mi5EZXBlbmRlbmN5TGlua0IEyN4fADKtBQoMUXVlcnlTZXJ2aWNlEmsKCEdl",
            "dFRyYWNlEh4uamFlZ2VyLmFwaV92Mi5HZXRUcmFjZVJlcXVlc3QaIS5qYWVn",
            "ZXIuYXBpX3YyLlNwYW5zUmVzcG9uc2VDaHVuayIagtPkkwIUEhIvdHJhY2Vz",
            "L3t0cmFjZV9pZH0wARJ0CgxBcmNoaXZlVHJhY2USIi5qYWVnZXIuYXBpX3Yy",
            "LkFyY2hpdmVUcmFjZVJlcXVlc3QaIy5qYWVnZXIuYXBpX3YyLkFyY2hpdmVU",
            "cmFjZVJlc3BvbnNlIhuC0+STAhUiEy9hcmNoaXZlL3t0cmFjZV9pZH0SZwoK",
            "RmluZFRyYWNlcxIgLmphZWdlci5hcGlfdjIuRmluZFRyYWNlc1JlcXVlc3Qa",
            "IS5qYWVnZXIuYXBpX3YyLlNwYW5zUmVzcG9uc2VDaHVuayISgtPkkwIMIgcv",
            "c2VhcmNoOgEqMAESZwoLR2V0U2VydmljZXMSIS5qYWVnZXIuYXBpX3YyLkdl",
            "dFNlcnZpY2VzUmVxdWVzdBoiLmphZWdlci5hcGlfdjIuR2V0U2VydmljZXNS",
            "ZXNwb25zZSIRgtPkkwILEgkvc2VydmljZXMSbwoNR2V0T3BlcmF0aW9ucxIj",
            "LmphZWdlci5hcGlfdjIuR2V0T3BlcmF0aW9uc1JlcXVlc3QaJC5qYWVnZXIu",
            "YXBpX3YyLkdldE9wZXJhdGlvbnNSZXNwb25zZSITgtPkkwINEgsvb3BlcmF0",
            "aW9ucxJ3Cg9HZXREZXBlbmRlbmNpZXMSJS5qYWVnZXIuYXBpX3YyLkdldERl",
            "cGVuZGVuY2llc1JlcXVlc3QaJi5qYWVnZXIuYXBpX3YyLkdldERlcGVuZGVu",
            "Y2llc1Jlc3BvbnNlIhWC0+STAg8SDS9kZXBlbmRlbmNpZXNCdgoXaW8uamFl",
            "Z2VydHJhY2luZy5hcGlfdjJaBmFwaV92MsjiHgHQ4h4B4OIeAcDjHgGSQUIS",
            "BTIDMS4wKgIBAnI1CgpKYWVnZXIgQVBJEidodHRwczovL2dpdGh1Yi5jb20v",
            "amFlZ2VydHJhY2luZy9qYWVnZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Jaeger.ApiV2.ModelReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Grpc.Gateway.ProtocGenSwagger.Options.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetTraceRequest), global::Jaeger.ApiV2.GetTraceRequest.Parser, new[]{ "TraceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.SpansResponseChunk), global::Jaeger.ApiV2.SpansResponseChunk.Parser, new[]{ "Spans" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.ArchiveTraceRequest), global::Jaeger.ApiV2.ArchiveTraceRequest.Parser, new[]{ "TraceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.ArchiveTraceResponse), global::Jaeger.ApiV2.ArchiveTraceResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.TraceQueryParameters), global::Jaeger.ApiV2.TraceQueryParameters.Parser, new[]{ "ServiceName", "OperationName", "Tags", "StartTimeMin", "StartTimeMax", "DurationMin", "DurationMax", "SearchDepth" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.FindTracesRequest), global::Jaeger.ApiV2.FindTracesRequest.Parser, new[]{ "Query" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetServicesRequest), global::Jaeger.ApiV2.GetServicesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetServicesResponse), global::Jaeger.ApiV2.GetServicesResponse.Parser, new[]{ "Services" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetOperationsRequest), global::Jaeger.ApiV2.GetOperationsRequest.Parser, new[]{ "Service", "SpanKind" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.Operation), global::Jaeger.ApiV2.Operation.Parser, new[]{ "Name", "SpanKind" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetOperationsResponse), global::Jaeger.ApiV2.GetOperationsResponse.Parser, new[]{ "OperationNames", "Operations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetDependenciesRequest), global::Jaeger.ApiV2.GetDependenciesRequest.Parser, new[]{ "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Jaeger.ApiV2.GetDependenciesResponse), global::Jaeger.ApiV2.GetDependenciesResponse.Parser, new[]{ "Dependencies" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetTraceRequest : pb::IMessage<GetTraceRequest> {
    private static readonly pb::MessageParser<GetTraceRequest> _parser = new pb::MessageParser<GetTraceRequest>(() => new GetTraceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTraceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTraceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTraceRequest(GetTraceRequest other) : this() {
      traceId_ = other.traceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTraceRequest Clone() {
      return new GetTraceRequest(this);
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 1;
    private pb::ByteString traceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TraceId {
      get { return traceId_; }
      set {
        traceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTraceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTraceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraceId != other.TraceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraceId.Length != 0) hash ^= TraceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TraceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TraceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTraceRequest other) {
      if (other == null) {
        return;
      }
      if (other.TraceId.Length != 0) {
        TraceId = other.TraceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TraceId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpansResponseChunk : pb::IMessage<SpansResponseChunk> {
    private static readonly pb::MessageParser<SpansResponseChunk> _parser = new pb::MessageParser<SpansResponseChunk>(() => new SpansResponseChunk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpansResponseChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpansResponseChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpansResponseChunk(SpansResponseChunk other) : this() {
      spans_ = other.spans_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpansResponseChunk Clone() {
      return new SpansResponseChunk(this);
    }

    /// <summary>Field number for the "spans" field.</summary>
    public const int SpansFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jaeger.ApiV2.Span> _repeated_spans_codec
        = pb::FieldCodec.ForMessage(10, global::Jaeger.ApiV2.Span.Parser);
    private readonly pbc::RepeatedField<global::Jaeger.ApiV2.Span> spans_ = new pbc::RepeatedField<global::Jaeger.ApiV2.Span>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jaeger.ApiV2.Span> Spans {
      get { return spans_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpansResponseChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpansResponseChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!spans_.Equals(other.spans_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= spans_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      spans_.WriteTo(output, _repeated_spans_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spans_.CalculateSize(_repeated_spans_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpansResponseChunk other) {
      if (other == null) {
        return;
      }
      spans_.Add(other.spans_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spans_.AddEntriesFrom(input, _repeated_spans_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArchiveTraceRequest : pb::IMessage<ArchiveTraceRequest> {
    private static readonly pb::MessageParser<ArchiveTraceRequest> _parser = new pb::MessageParser<ArchiveTraceRequest>(() => new ArchiveTraceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArchiveTraceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArchiveTraceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArchiveTraceRequest(ArchiveTraceRequest other) : this() {
      traceId_ = other.traceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArchiveTraceRequest Clone() {
      return new ArchiveTraceRequest(this);
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 1;
    private pb::ByteString traceId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TraceId {
      get { return traceId_; }
      set {
        traceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArchiveTraceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArchiveTraceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraceId != other.TraceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TraceId.Length != 0) hash ^= TraceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TraceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TraceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TraceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArchiveTraceRequest other) {
      if (other == null) {
        return;
      }
      if (other.TraceId.Length != 0) {
        TraceId = other.TraceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TraceId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArchiveTraceResponse : pb::IMessage<ArchiveTraceResponse> {
    private static readonly pb::MessageParser<ArchiveTraceResponse> _parser = new pb::MessageParser<ArchiveTraceResponse>(() => new ArchiveTraceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArchiveTraceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArchiveTraceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArchiveTraceResponse(ArchiveTraceResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArchiveTraceResponse Clone() {
      return new ArchiveTraceResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArchiveTraceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArchiveTraceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArchiveTraceResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class TraceQueryParameters : pb::IMessage<TraceQueryParameters> {
    private static readonly pb::MessageParser<TraceQueryParameters> _parser = new pb::MessageParser<TraceQueryParameters>(() => new TraceQueryParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TraceQueryParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceQueryParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceQueryParameters(TraceQueryParameters other) : this() {
      serviceName_ = other.serviceName_;
      operationName_ = other.operationName_;
      tags_ = other.tags_.Clone();
      startTimeMin_ = other.startTimeMin_ != null ? other.startTimeMin_.Clone() : null;
      startTimeMax_ = other.startTimeMax_ != null ? other.startTimeMax_.Clone() : null;
      durationMin_ = other.durationMin_ != null ? other.durationMin_.Clone() : null;
      durationMax_ = other.durationMax_ != null ? other.durationMax_.Clone() : null;
      searchDepth_ = other.searchDepth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraceQueryParameters Clone() {
      return new TraceQueryParameters(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_name" field.</summary>
    public const int OperationNameFieldNumber = 2;
    private string operationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationName {
      get { return operationName_; }
      set {
        operationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "start_time_min" field.</summary>
    public const int StartTimeMinFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimeMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimeMin {
      get { return startTimeMin_; }
      set {
        startTimeMin_ = value;
      }
    }

    /// <summary>Field number for the "start_time_max" field.</summary>
    public const int StartTimeMaxFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTimeMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTimeMax {
      get { return startTimeMax_; }
      set {
        startTimeMax_ = value;
      }
    }

    /// <summary>Field number for the "duration_min" field.</summary>
    public const int DurationMinFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration durationMin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration DurationMin {
      get { return durationMin_; }
      set {
        durationMin_ = value;
      }
    }

    /// <summary>Field number for the "duration_max" field.</summary>
    public const int DurationMaxFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Duration durationMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration DurationMax {
      get { return durationMax_; }
      set {
        durationMax_ = value;
      }
    }

    /// <summary>Field number for the "search_depth" field.</summary>
    public const int SearchDepthFieldNumber = 8;
    private int searchDepth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SearchDepth {
      get { return searchDepth_; }
      set {
        searchDepth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TraceQueryParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TraceQueryParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (OperationName != other.OperationName) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (!object.Equals(StartTimeMin, other.StartTimeMin)) return false;
      if (!object.Equals(StartTimeMax, other.StartTimeMax)) return false;
      if (!object.Equals(DurationMin, other.DurationMin)) return false;
      if (!object.Equals(DurationMax, other.DurationMax)) return false;
      if (SearchDepth != other.SearchDepth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (OperationName.Length != 0) hash ^= OperationName.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (startTimeMin_ != null) hash ^= StartTimeMin.GetHashCode();
      if (startTimeMax_ != null) hash ^= StartTimeMax.GetHashCode();
      if (durationMin_ != null) hash ^= DurationMin.GetHashCode();
      if (durationMax_ != null) hash ^= DurationMax.GetHashCode();
      if (SearchDepth != 0) hash ^= SearchDepth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (OperationName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OperationName);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (startTimeMin_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTimeMin);
      }
      if (startTimeMax_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartTimeMax);
      }
      if (durationMin_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DurationMin);
      }
      if (durationMax_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DurationMax);
      }
      if (SearchDepth != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SearchDepth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (OperationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationName);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (startTimeMin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimeMin);
      }
      if (startTimeMax_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTimeMax);
      }
      if (durationMin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationMin);
      }
      if (durationMax_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationMax);
      }
      if (SearchDepth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SearchDepth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TraceQueryParameters other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.OperationName.Length != 0) {
        OperationName = other.OperationName;
      }
      tags_.Add(other.tags_);
      if (other.startTimeMin_ != null) {
        if (startTimeMin_ == null) {
          StartTimeMin = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimeMin.MergeFrom(other.StartTimeMin);
      }
      if (other.startTimeMax_ != null) {
        if (startTimeMax_ == null) {
          StartTimeMax = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTimeMax.MergeFrom(other.StartTimeMax);
      }
      if (other.durationMin_ != null) {
        if (durationMin_ == null) {
          DurationMin = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        DurationMin.MergeFrom(other.DurationMin);
      }
      if (other.durationMax_ != null) {
        if (durationMax_ == null) {
          DurationMax = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        DurationMax.MergeFrom(other.DurationMax);
      }
      if (other.SearchDepth != 0) {
        SearchDepth = other.SearchDepth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            OperationName = input.ReadString();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 34: {
            if (startTimeMin_ == null) {
              StartTimeMin = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimeMin);
            break;
          }
          case 42: {
            if (startTimeMax_ == null) {
              StartTimeMax = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTimeMax);
            break;
          }
          case 50: {
            if (durationMin_ == null) {
              DurationMin = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(DurationMin);
            break;
          }
          case 58: {
            if (durationMax_ == null) {
              DurationMax = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(DurationMax);
            break;
          }
          case 64: {
            SearchDepth = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindTracesRequest : pb::IMessage<FindTracesRequest> {
    private static readonly pb::MessageParser<FindTracesRequest> _parser = new pb::MessageParser<FindTracesRequest>(() => new FindTracesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindTracesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindTracesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindTracesRequest(FindTracesRequest other) : this() {
      query_ = other.query_ != null ? other.query_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindTracesRequest Clone() {
      return new FindTracesRequest(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private global::Jaeger.ApiV2.TraceQueryParameters query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Jaeger.ApiV2.TraceQueryParameters Query {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindTracesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindTracesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Query, other.Query)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (query_ != null) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (query_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindTracesRequest other) {
      if (other == null) {
        return;
      }
      if (other.query_ != null) {
        if (query_ == null) {
          Query = new global::Jaeger.ApiV2.TraceQueryParameters();
        }
        Query.MergeFrom(other.Query);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (query_ == null) {
              Query = new global::Jaeger.ApiV2.TraceQueryParameters();
            }
            input.ReadMessage(Query);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetServicesRequest : pb::IMessage<GetServicesRequest> {
    private static readonly pb::MessageParser<GetServicesRequest> _parser = new pb::MessageParser<GetServicesRequest>(() => new GetServicesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServicesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServicesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServicesRequest(GetServicesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServicesRequest Clone() {
      return new GetServicesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServicesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServicesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServicesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetServicesResponse : pb::IMessage<GetServicesResponse> {
    private static readonly pb::MessageParser<GetServicesResponse> _parser = new pb::MessageParser<GetServicesResponse>(() => new GetServicesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServicesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServicesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServicesResponse(GetServicesResponse other) : this() {
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServicesResponse Clone() {
      return new GetServicesResponse(this);
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_services_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> services_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServicesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServicesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!services_.Equals(other.services_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= services_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      services_.WriteTo(output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += services_.CalculateSize(_repeated_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServicesResponse other) {
      if (other == null) {
        return;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOperationsRequest : pb::IMessage<GetOperationsRequest> {
    private static readonly pb::MessageParser<GetOperationsRequest> _parser = new pb::MessageParser<GetOperationsRequest>(() => new GetOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationsRequest(GetOperationsRequest other) : this() {
      service_ = other.service_;
      spanKind_ = other.spanKind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationsRequest Clone() {
      return new GetOperationsRequest(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    private string service_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "span_kind" field.</summary>
    public const int SpanKindFieldNumber = 2;
    private string spanKind_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpanKind {
      get { return spanKind_; }
      set {
        spanKind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (SpanKind != other.SpanKind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (SpanKind.Length != 0) hash ^= SpanKind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Service.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (SpanKind.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SpanKind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (SpanKind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpanKind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.SpanKind.Length != 0) {
        SpanKind = other.SpanKind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
          case 18: {
            SpanKind = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Operation : pb::IMessage<Operation> {
    private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Operation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation(Operation other) : this() {
      name_ = other.name_;
      spanKind_ = other.spanKind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation Clone() {
      return new Operation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "span_kind" field.</summary>
    public const int SpanKindFieldNumber = 2;
    private string spanKind_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpanKind {
      get { return spanKind_; }
      set {
        spanKind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Operation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Operation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SpanKind != other.SpanKind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SpanKind.Length != 0) hash ^= SpanKind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SpanKind.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SpanKind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SpanKind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpanKind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Operation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SpanKind.Length != 0) {
        SpanKind = other.SpanKind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SpanKind = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOperationsResponse : pb::IMessage<GetOperationsResponse> {
    private static readonly pb::MessageParser<GetOperationsResponse> _parser = new pb::MessageParser<GetOperationsResponse>(() => new GetOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationsResponse(GetOperationsResponse other) : this() {
      operationNames_ = other.operationNames_.Clone();
      operations_ = other.operations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationsResponse Clone() {
      return new GetOperationsResponse(this);
    }

    /// <summary>Field number for the "operationNames" field.</summary>
    public const int OperationNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_operationNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> operationNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///deprecated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OperationNames {
      get { return operationNames_; }
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Jaeger.ApiV2.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(18, global::Jaeger.ApiV2.Operation.Parser);
    private readonly pbc::RepeatedField<global::Jaeger.ApiV2.Operation> operations_ = new pbc::RepeatedField<global::Jaeger.ApiV2.Operation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jaeger.ApiV2.Operation> Operations {
      get { return operations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operationNames_.Equals(other.operationNames_)) return false;
      if(!operations_.Equals(other.operations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operationNames_.GetHashCode();
      hash ^= operations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      operationNames_.WriteTo(output, _repeated_operationNames_codec);
      operations_.WriteTo(output, _repeated_operations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operationNames_.CalculateSize(_repeated_operationNames_codec);
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOperationsResponse other) {
      if (other == null) {
        return;
      }
      operationNames_.Add(other.operationNames_);
      operations_.Add(other.operations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operationNames_.AddEntriesFrom(input, _repeated_operationNames_codec);
            break;
          }
          case 18: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDependenciesRequest : pb::IMessage<GetDependenciesRequest> {
    private static readonly pb::MessageParser<GetDependenciesRequest> _parser = new pb::MessageParser<GetDependenciesRequest>(() => new GetDependenciesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDependenciesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDependenciesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDependenciesRequest(GetDependenciesRequest other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDependenciesRequest Clone() {
      return new GetDependenciesRequest(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDependenciesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDependenciesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDependenciesRequest other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDependenciesResponse : pb::IMessage<GetDependenciesResponse> {
    private static readonly pb::MessageParser<GetDependenciesResponse> _parser = new pb::MessageParser<GetDependenciesResponse>(() => new GetDependenciesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDependenciesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Jaeger.ApiV2.QueryReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDependenciesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDependenciesResponse(GetDependenciesResponse other) : this() {
      dependencies_ = other.dependencies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDependenciesResponse Clone() {
      return new GetDependenciesResponse(this);
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Jaeger.ApiV2.DependencyLink> _repeated_dependencies_codec
        = pb::FieldCodec.ForMessage(10, global::Jaeger.ApiV2.DependencyLink.Parser);
    private readonly pbc::RepeatedField<global::Jaeger.ApiV2.DependencyLink> dependencies_ = new pbc::RepeatedField<global::Jaeger.ApiV2.DependencyLink>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Jaeger.ApiV2.DependencyLink> Dependencies {
      get { return dependencies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDependenciesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDependenciesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dependencies_.Equals(other.dependencies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dependencies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dependencies_.WriteTo(output, _repeated_dependencies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dependencies_.CalculateSize(_repeated_dependencies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDependenciesResponse other) {
      if (other == null) {
        return;
      }
      dependencies_.Add(other.dependencies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dependencies_.AddEntriesFrom(input, _repeated_dependencies_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
