/**
 * Autogenerated by Thrift Compiler (0.14.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

using System.Collections.Generic;
using Thrift.Collections;


#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE1006  // parts of the code use IDL spelling

namespace Jaeger.Thrift.Agent
{
  public static class baggageExtensions
  {
    public static bool Equals(this List<global::Jaeger.Thrift.Agent.BaggageRestriction> instance, object that)
    {
      if (!(that is List<global::Jaeger.Thrift.Agent.BaggageRestriction> other)) return false;
      if (ReferenceEquals(instance, other)) return true;

      return TCollections.Equals(instance, other);
    }


    public static int GetHashCode(this List<global::Jaeger.Thrift.Agent.BaggageRestriction> instance)
    {
      return TCollections.GetHashCode(instance);
    }


    public static List<global::Jaeger.Thrift.Agent.BaggageRestriction> DeepCopy(this List<global::Jaeger.Thrift.Agent.BaggageRestriction> source)
    {
      if (source == null)
        return null;

      var tmp10 = new List<global::Jaeger.Thrift.Agent.BaggageRestriction>(source.Count);
      foreach (var elem in source)
        tmp10.Add((elem != null) ? elem.DeepCopy() : null);
      return tmp10;
    }


  }
}
